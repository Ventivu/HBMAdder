buildscript {
    repositories {
        maven {
            name = "aliyun"
            url "https://maven.aliyun.com/repository/public/"
        }
        maven { url = "https://cyankoton.github.io/maven" }
        mavenCentral()
        maven {
            name = "forge"
            //url = "https://files.minecraftforge.net/maven"
            url = "https://maven.minecraftforge.net"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath("io.github.cyankoton:ForgeGradle:1.2-1.0.8") {
            changing = true
        }
    }
}
plugins {
    id 'java-library'    // JAVA 依赖库
}

apply plugin: 'forge'


// JAVA 版本
sourceCompatibility = targetCompatibility = '1.8'

mirrorstation {
    // cyankoton
    mcJsonUrl = "https://s3.amazonaws.com/Minecraft.Download/versions/{MC_VERSION}/{MC_VERSION}.json"
    mcJarUrl = "https://cyankoton.github.io/maven/minecraft/versions/{MC_VERSION}/{MC_VERSION}.jar"
    mcServerUrl = "https://cyankoton.github.io/maven/minecraft/versions/{MC_VERSION}/minecraft_server.{MC_VERSION}.jar"
    mcpUrl = "https://files.minecraftforge.net/fernflower-fix-1.0.zip"
    assetsUrl = "https://resources.download.minecraft.net"
    libraryUrl = "https://libraries.minecraft.net/"
    assetsIndexUrl = "https://s3.amazonaws.com/Minecraft.Download/indexes/{ASSET_INDEX}.json"
    forgeMavenUrl = "https://maven.minecraftforge.net"
    // mirror
    mirrorMavenUrl = "https://cyankoton.github.io/maven"
    aliyunMavenUrl = "https://maven.aliyun.com/repository/public"
    mavenMavenUrl = "https://repo1.maven.org/maven2"

    /*
    // 默认设置
    mcJsonUrl = "https://s3.amazonaws.com/Minecraft.Download/versions/{MC_VERSION}/{MC_VERSION}.json"
    mcJarUrl = "https://s3.amazonaws.com/Minecraft.Download/versions/{MC_VERSION}/{MC_VERSION}.jar"
    mcServerUrl = "https://s3.amazonaws.com/Minecraft.Download/versions/{MC_VERSION}/minecraft_server.{MC_VERSION}.jar"
    mcpUrl = "https://files.minecraftforge.net/fernflower-fix-1.0.zip"
    assetsUrl = "https://resources.download.minecraft.net"
    libraryUrl = "https://libraries.minecraft.net/"
    assetsIndexUrl = "https://s3.amazonaws.com/Minecraft.Download/indexes/{ASSET_INDEX}.json"
    forgeMavenUrl = "https://maven.minecraftforge.net"
    // mirror
    mirrorMavenUrl = "https://cyankoton.github.io/maven"
    aliyunMavenUrl = "https://maven.aliyun.com/repository/public"
    mavenMavenUrl = "https://repo1.maven.org/maven2"
    */
}

version = "0.0.7.1"
group = "com.Ventivu.HA"
archivesBaseName = "HBMAddon"


minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
    // mappings = "stable_12"
}

dependencies {
    implementation 'org.jetbrains:annotations-java5:20.1.0'
    implementation fileTree("Mods")
    compileOnly fileTree("DepMods")
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    filesMatching('mcmod.info') {
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
}
// http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}


// 这将此任务创建一个.jar文件，其中包含此 MOD 的源代码
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}


// 这将此任务将创建一个.jar文件，其中包含此mod的已取消订阅版本，供其他开发人员在开发环境中使用。
task devJar(type: Jar) {
    classifier = "dev"
    from sourceSets.main.output
}
// 在构建 MOD 时候，创建列出的工件
artifacts {
    archives sourcesJar
    archives devJar
}

runClient {
    args("--username", "Ventivu")
}

//---------------------------------------------------------------------------------------------
